----------------------------------------------------------------
-- wren gayle romano <wren@community.haskell.org>   ~ 2015.06.07
----------------------------------------------------------------

-- By and large Cabal >=1.2 is fine; but
-- * >= 1.6 gives tested-with: and source-repository:
-- * >=1.8 allows executables which can build-depends: on the library
-- * >=1.9.2 allows Test-Suite
Cabal-Version:  >= 1.9.2
Build-Type:     Simple

Name:           bytestring-lexing
Version:        0.5.0.5
Stability:      provisional
Homepage:       http://code.haskell.org/~wren/
Author:         wren gayle romano, Don Stewart
Maintainer:     wren@community.haskell.org
Copyright:      Copyright (c) 2012--2015 wren gayle romano, 2008--2011 Don Stewart
License:        BSD3
License-File:   LICENSE
Extra-source-files: AUTHORS, README.md, CHANGELOG

Category: Data
Synopsis:
    Efficiently parse and produce common integral and fractional numbers.
Description:
    The bytestring-lexing package offers extremely efficient `ByteString`
    parsers for some common lexemes: namely integral and fractional
    numbers. In addition, it provides efficient serializers for (some
    of) the formats it parses.
    .
    As of version 0.3.0, bytestring-lexing offers the best-in-show
    parsers for integral values. (According to the Warp web server's
    benchmark of parsing the Content-Length field of HTTP headers.) And
    as of version 0.5.0 it offers (to my knowledge) the best-in-show
    parser for fractional/floating numbers.
    .
    Some benchmarks for this package can be found at:
    <http://code.haskell.org/~wren/bytestring-lexing/bench/html>

-- Cf., <https://travis-ci.org/wrengr/bytestring-lexing>
Tested-With:
    GHC ==7.4.1, GHC ==7.4.2,
    GHC ==7.6.1, GHC ==7.6.2, GHC ==7.6.3,
    GHC ==7.8.1, GHC ==7.8.2, GHC ==7.8.3, GHC ==7.8.4,
    GHC ==7.10.1, GHC ==7.10.2

----------------------------------------------------------------
Source-Repository head
    Type:     darcs
    Location: http://code.haskell.org/~wren/bytestring-lexing

----------------------------------------------------------------
Library
    Ghc-Options:     -O2
    Hs-Source-Dirs:  src
    Exposed-Modules: Data.ByteString.Lex.Integral
                     Data.ByteString.Lex.Fractional
    Other-Modules:   Data.ByteString.Lex.Internal
    -- We can probably push this back further, but these're the
    -- oldest versions we can test on TravisCI. (== GHC 7.4.1)
    Build-Depends:  base              >= 4.5 && < 5
                 ,  bytestring        >= 0.9.2.1 && < 0.11

----------------------------------------------------------------
-- <https://www.haskell.org/cabal/users-guide/developing-packages.html#test-suites>
-- You can either:
-- (1) have type:exitcode-stdio-1.0 & main-is:
--     where main-is exports `main::IO()` as usual. Or,
-- (2) have type:detailed-0.9 & test-module:
--     where test-module exports tests::IO[Distribution.TestSuite.Test]
--     and you have Build-Depends: Cabal >= 1.9.2
--
-- Rather than using Cabal's built-in detailed-0.9 framework, we could use the test-framework* family of packages with exitcode-stdio-1.0. cf., <http://hackage.haskell.org/package/Decimal-0.4.2/src/Decimal.cabal> Or the tasty* family of packages with exitcode-stdio-1.0. Notice that test-framework-smallcheck is deprecated in favor of tasty-smallcheck. Both have more dependencies than Cabal, so will be harder to install on legacy systems; but then we wouldn't have to maintain our own code to glue into Cabal's detailed-0.9. Note that the oldest Tasty requires base>=4.5 whereas the oldest test-framework seems to have no lower bound on base.
Test-Suite test-all
    Hs-Source-Dirs: test
    Type:           exitcode-stdio-1.0
    -- HACK: main-is must *not* have ./test/ like it does for executables!
    Main-Is:        Main.hs
    Other-Modules:  Integral
                 ,  Fractional
    Build-Depends:  base              >= 4.5 && < 5
                 ,  bytestring        >= 0.9.2.1 && < 0.11
                 ,  bytestring-lexing >= 0.5.0.5
                 ,  QuickCheck        >= 2.4.1
                 ,  smallcheck        >= 1.1.1
                 -- lazysmallcheck    >= 0.6

-- cabal configure flags:
-- * --enable-tests
-- * --enable-coverage (replaces the deprecated --enable-library-coverage)
-- * --enable-benchmarks (doesn't seem to actually work... At least, I was getting errors whenever I tried passing this; maybe upping the cabal-version to 1.8 fixed that?)

----------------------------------------------------------------
----------------------------------------------------------- fin.
